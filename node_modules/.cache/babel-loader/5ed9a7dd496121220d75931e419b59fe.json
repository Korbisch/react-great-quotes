{"ast":null,"code":"var _jsxFileName = \"/Users/korbinianschleifer/Developer/React/react-router-practice/src/pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\"; // const DUMMY_QUOTES = [\n//   {\n//     id: \"q1\",\n//     author: \"Korbi\",\n//     text: \"To React or not to React\",\n//   },\n//   {\n//     id: \"q2\",\n//     author: \"Leo\",\n//     text: \"Life is like a React component\",\n//   },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: quotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (status === \"completed\" && (!quotes || quotes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: quotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AllQuotes, \"zBl/r3bhdSCP0UpB3eMihK2BAi4=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["/Users/korbinianschleifer/Developer/React/react-router-practice/src/pages/AllQuotes.js"],"names":["useEffect","QuoteList","useHttp","getAllQuotes","LoadingSpinner","NoQuotesFound","AllQuotes","sendRequest","status","data","quotes","error","length"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,aAAP,MAA0B,oCAA1B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,IAAI,EAAEC,MAHF;AAIJC,IAAAA;AAJI,MAKFT,OAAO,CAACC,YAAD,EAAe,IAAf,CALX;AAOAH,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAIC,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIG,KAAJ,EAAW;AACT,wBAAO;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIH,MAAM,KAAK,WAAX,KAA2B,CAACE,MAAD,IAAWA,MAAM,CAACE,MAAP,KAAkB,CAAxD,CAAJ,EAAgE;AAC9D,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAjCD;;GAAMJ,S;UAMAJ,O;;;KANAI,S;AAmCN,eAAeA,SAAf","sourcesContent":["import { useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\n\n// const DUMMY_QUOTES = [\n//   {\n//     id: \"q1\",\n//     author: \"Korbi\",\n//     text: \"To React or not to React\",\n//   },\n//   {\n//     id: \"q2\",\n//     author: \"Leo\",\n//     text: \"Life is like a React component\",\n//   },\n// ];\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: quotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (status === \"completed\" && (!quotes || quotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  return (\n    <>\n      <QuoteList quotes={quotes} />\n    </>\n  );\n};\n\nexport default AllQuotes;\n"]},"metadata":{},"sourceType":"module"}